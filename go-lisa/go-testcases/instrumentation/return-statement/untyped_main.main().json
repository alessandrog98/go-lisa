{
	"name": "untyped main::main()",
	"description": null,
	"nodes": [
		{
			"id": 0,
			"text": "m1()"
		},
		{
			"id": 1,
			"subNodes": [
				2
			],
			"text": "m2(rand::Intn(10))"
		},
		{
			"id": 2,
			"subNodes": [
				3
			],
			"text": "rand::Intn(10)"
		},
		{
			"id": 3,
			"text": "10"
		},
		{
			"id": 4,
			"subNodes": [
				5
			],
			"text": "m3(rand::Intn(10))"
		},
		{
			"id": 5,
			"subNodes": [
				6
			],
			"text": "rand::Intn(10)"
		},
		{
			"id": 6,
			"text": "10"
		},
		{
			"id": 7,
			"subNodes": [
				8
			],
			"text": "m4(rand::Intn(10))"
		},
		{
			"id": 8,
			"subNodes": [
				9
			],
			"text": "rand::Intn(10)"
		},
		{
			"id": 9,
			"text": "10"
		},
		{
			"id": 10,
			"text": "ret"
		}
	],
	"edges": [
		{
			"sourceId": 0,
			"destId": 1,
			"kind": "SequentialEdge"
		},
		{
			"sourceId": 1,
			"destId": 4,
			"kind": "SequentialEdge"
		},
		{
			"sourceId": 4,
			"destId": 7,
			"kind": "SequentialEdge"
		},
		{
			"sourceId": 7,
			"destId": 10,
			"kind": "SequentialEdge"
		}
	],
	"descriptions": [
		{
			"nodeId": 0,
			"description": {
				"expressions": [
					"open_call_ret_value@'go-testcases/instrumentation/return-statement/instrumented-returns.go':9:4"
				],
				"state": {
					"heap": "#TOP#",
					"type": "#TOP#",
					"value": "#TOP#"
				}
			}
		},
		{
			"nodeId": 1,
			"description": {
				"expressions": [
					"open_call_ret_value@'go-testcases/instrumentation/return-statement/instrumented-returns.go':10:17"
				],
				"state": {
					"heap": "#TOP#",
					"type": "#TOP#",
					"value": "#TOP#"
				}
			}
		},
		{
			"nodeId": 2,
			"description": {
				"expressions": [
					"open_call_ret_value@'go-testcases/instrumentation/return-statement/instrumented-returns.go':10:16"
				],
				"state": {
					"heap": "#TOP#",
					"type": {
						"map": {
							"open_call_ret_value@'go-testcases/instrumentation/return-statement/instrumented-returns.go':10:16": "#TOP#",
							"open_call_return": "#TOP#"
						},
						"stack": "#TOP#"
					},
					"value": {
						"map": {
							"open_call_ret_value@'go-testcases/instrumentation/return-statement/instrumented-returns.go':10:16": "[-Inf, +Inf]",
							"open_call_return": "[-Inf, +Inf]"
						},
						"stack": "[-Inf, +Inf]"
					}
				}
			}
		},
		{
			"nodeId": 3,
			"description": {
				"expressions": [
					"10"
				],
				"state": {
					"heap": "#TOP#",
					"type": {
						"map": "empty",
						"stack": [
							"int(untyped)"
						]
					},
					"value": {
						"map": "empty",
						"stack": "[10, 10]"
					}
				}
			}
		},
		{
			"nodeId": 4,
			"description": {
				"expressions": [
					"open_call_ret_value@'go-testcases/instrumentation/return-statement/instrumented-returns.go':11:17"
				],
				"state": {
					"heap": "#TOP#",
					"type": "#TOP#",
					"value": "#TOP#"
				}
			}
		},
		{
			"nodeId": 5,
			"description": {
				"expressions": [
					"open_call_ret_value@'go-testcases/instrumentation/return-statement/instrumented-returns.go':11:16"
				],
				"state": {
					"heap": "#TOP#",
					"type": {
						"map": {
							"open_call_ret_value@'go-testcases/instrumentation/return-statement/instrumented-returns.go':11:16": "#TOP#",
							"open_call_return": "#TOP#"
						},
						"stack": "#TOP#"
					},
					"value": {
						"map": {
							"open_call_ret_value@'go-testcases/instrumentation/return-statement/instrumented-returns.go':11:16": "[-Inf, +Inf]",
							"open_call_return": "[-Inf, +Inf]"
						},
						"stack": "[-Inf, +Inf]"
					}
				}
			}
		},
		{
			"nodeId": 6,
			"description": {
				"expressions": [
					"10"
				],
				"state": {
					"heap": "#TOP#",
					"type": {
						"map": "empty",
						"stack": [
							"int(untyped)"
						]
					},
					"value": {
						"map": "empty",
						"stack": "[10, 10]"
					}
				}
			}
		},
		{
			"nodeId": 7,
			"description": {
				"expressions": [
					"open_call_ret_value@'go-testcases/instrumentation/return-statement/instrumented-returns.go':12:17"
				],
				"state": {
					"heap": "#TOP#",
					"type": "#TOP#",
					"value": "#TOP#"
				}
			}
		},
		{
			"nodeId": 8,
			"description": {
				"expressions": [
					"open_call_ret_value@'go-testcases/instrumentation/return-statement/instrumented-returns.go':12:16"
				],
				"state": {
					"heap": "#TOP#",
					"type": {
						"map": {
							"open_call_ret_value@'go-testcases/instrumentation/return-statement/instrumented-returns.go':12:16": "#TOP#",
							"open_call_return": "#TOP#"
						},
						"stack": "#TOP#"
					},
					"value": {
						"map": {
							"open_call_ret_value@'go-testcases/instrumentation/return-statement/instrumented-returns.go':12:16": "[-Inf, +Inf]",
							"open_call_return": "[-Inf, +Inf]"
						},
						"stack": "[-Inf, +Inf]"
					}
				}
			}
		},
		{
			"nodeId": 9,
			"description": {
				"expressions": [
					"10"
				],
				"state": {
					"heap": "#TOP#",
					"type": {
						"map": "empty",
						"stack": [
							"int(untyped)"
						]
					},
					"value": {
						"map": "empty",
						"stack": "[10, 10]"
					}
				}
			}
		},
		{
			"nodeId": 10,
			"description": {
				"expressions": [
					"skip"
				],
				"state": {
					"heap": "#TOP#",
					"type": {
						"map": "empty",
						"stack": "_|_"
					},
					"value": {
						"map": "empty",
						"stack": "_|_"
					}
				}
			}
		}
	]
}